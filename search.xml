<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于 YOLO 识别违规骑行</title>
      <link href="/2022/11/15/YOLO/"/>
      <url>/2022/11/15/YOLO/</url>
      
        <content type="html"><![CDATA[<p>由于并没有系统性的学习过深度学习和计算机视觉相关的知识，本篇帖子所记内容皆为实践和不断试错的结果；为使得已解决的bug和调通的方案具有可复现性，同时积累自己的经验而立此贴。</p><h2 id="Anaconda相关指令"><a href="#Anaconda相关指令" class="headerlink" title="Anaconda相关指令"></a>Anaconda相关指令</h2><h3 id="查看conda的环境配置"><a href="#查看conda的环境配置" class="headerlink" title="查看conda的环境配置"></a>查看conda的环境配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure><h3 id="更新conda"><a href="#更新conda" class="headerlink" title="更新conda"></a>更新conda</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure><h3 id="查询某个命令的帮助"><a href="#查询某个命令的帮助" class="headerlink" title="查询某个命令的帮助"></a>查询某个命令的帮助</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --help</span><br></pre></td></tr></table></figure><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name python=3.8</span><br></pre></td></tr></table></figure><h3 id="查看有哪些虚拟环境"><a href="#查看有哪些虚拟环境" class="headerlink" title="查看有哪些虚拟环境"></a>查看有哪些虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure><h3 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate env_name</span><br></pre></td></tr></table></figure><h3 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title="退出虚拟环境"></a>退出虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate</span><br></pre></td></tr></table></figure><h3 id="删除虚拟环境"><a href="#删除虚拟环境" class="headerlink" title="删除虚拟环境"></a>删除虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name env_name --all</span><br></pre></td></tr></table></figure><h3 id="导出环境"><a href="#导出环境" class="headerlink" title="导出环境"></a>导出环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获得环境中的所有配置</span></span><br><span class="line">conda env export --name myenv &gt; myenv.yml</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新还原环境</span></span><br><span class="line">conda env create -f  myenv.yml</span><br></pre></td></tr></table></figure><hr><h2 id="包（Package）的管理"><a href="#包（Package）的管理" class="headerlink" title="包（Package）的管理"></a>包（Package）的管理</h2><h3 id="查询包的安装情况"><a href="#查询包的安装情况" class="headerlink" title="查询包的安装情况"></a>查询包的安装情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><h3 id="conda卸载包"><a href="#conda卸载包" class="headerlink" title="conda卸载包"></a>conda卸载包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda uninstall package_name --force</span><br></pre></td></tr></table></figure><h3 id="包的安装和更新"><a href="#包的安装和更新" class="headerlink" title="包的安装和更新"></a>包的安装和更新</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install package_name</span><br></pre></td></tr></table></figure><h3 id="清理anaconda缓存"><a href="#清理anaconda缓存" class="headerlink" title="清理anaconda缓存"></a>清理anaconda缓存</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda clean -p      # 删除没有用的包 --packages</span><br><span class="line">conda clean -t      # 删除tar打包 --tarballs</span><br><span class="line">conda clean -y -all # 删除所有的安装包及cache(索引缓存、锁定文件、未使用过的包和tar包)</span><br></pre></td></tr></table></figure><hr><h2 id="报错-amp-解决方法"><a href="#报错-amp-解决方法" class="headerlink" title="报错 &amp; 解决方法"></a>报错 &amp; 解决方法</h2><h3 id="UnicodeDecodeError-‘gbk’-codec-can’t-decode-byte-0x80-in-position-2467-illegal-multibyte-sequence"><a href="#UnicodeDecodeError-‘gbk’-codec-can’t-decode-byte-0x80-in-position-2467-illegal-multibyte-sequence" class="headerlink" title="UnicodeDecodeError: ‘gbk’ codec can’t decode byte 0x80 in position 2467: illegal multibyte sequence"></a>UnicodeDecodeError: ‘gbk’ codec can’t decode byte 0x80 in position 2467: illegal multibyte sequence</h3><p>对 yolov7 添加 SimAM 注意力机制时(<a href="https://blog.csdn.net/qq_38668236/article/details/126695253">改进YOLOv7系列：24.添加SimAM注意力机制</a>) ，在添加完对应的模块后，运行 <code>train.py</code> 报错如下：</p><p><img src="/img/UnicodeDecodeError.png" alt="UnicodeDecodeError" title="Err"></p><blockquote><p>在 <code>models/yolo.py</code> 按 <kbd>ctrl</kbd> + <kbd>f</kbd> 搜索 <code>with open</code> ，将 517 行 <code>with open(cfg) as f:</code> 改为 <code>with open(cfg, encoding=&#39;utf-8&#39;) as f:</code></p></blockquote><p><em>说明: 在看到 ‘gbk’ codec can’t decode 时就知道又是要在什么地方加 <code>, encoding=&#39;utf-8&#39;</code> 的时候了，于是轻车熟路的对 <code>train.py</code> 文件中的 65 行 <code>with open(opt.data) as f:</code> 添加了 <code>, encoding=&#39;utf-8&#39;</code> ，重新运行后依然是这个报错，然后尝试了将 <code>train.py</code> 中所有 <code>with open(...)...</code> 都加了 <code>encoding=&#39;utf-8&#39;</code> ，依然无效；在看到报错路径也有 <code>model/yolo.py</code> 于是尝试找到其中的 <code>with open(..)..</code> 添加 <code>encoding=&#39;utf-8&#39;</code> 后解决报错</em></p><h3 id="NameError-name-‘CNeB’-is-not-defined"><a href="#NameError-name-‘CNeB’-is-not-defined" class="headerlink" title="NameError: name ‘CNeB’ is not defined"></a>NameError: name ‘CNeB’ is not defined</h3><p>同样是添加完 SimAM 注意力机制时的报错</p><p><img src="/img/NameError.png" alt="NameError" title="Err"></p><blockquote><p>将 <code>SimAM.yaml</code> 中的 CNeB 模块换成 ConV 等已有的模块</p></blockquote><p><em>说明: 未定义&#x2F;缺少对应的模块</em></p><h3 id="训练模型无法识别物体"><a href="#训练模型无法识别物体" class="headerlink" title="训练模型无法识别物体"></a>训练模型无法识别物体</h3><p>加完 SimAM 后浅浅 train 了 30 轮，欲观察是否可用，但跑完后模型识别率为零，无法识别任何物体(不打任何标记框)。</p><blockquote><p>加大训练轮数(最少100轮)，使模型收敛</p></blockquote><p><em>说明: 在 SimAM 模块失效和模型没有收敛两种可能性徘徊的时候，远程连接了同事的主机克隆了自己的配置炼丹100轮，用训练集图片中的测试集图片来给模型推理，识别成功，幸亏不是前者的原因。</em></p>]]></content>
      
      
      <categories>
          
          <category> 学习日志 </category>
          
          <category> YOLO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YOLO </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于 Hexo &amp; github &amp; git 搭建个人博客</title>
      <link href="/2022/11/14/Hexo/"/>
      <url>/2022/11/14/Hexo/</url>
      
        <content type="html"><![CDATA[<p>这是我搭建完博客后写的第一篇文章，也浅浅记录一下搭建过程以及遇到的bug和解决方法</p><h2 id="Hexo相关指令"><a href="#Hexo相关指令" class="headerlink" title="Hexo相关指令"></a>Hexo相关指令</h2><h3 id="创建新帖子"><a href="#创建新帖子" class="headerlink" title="创建新帖子"></a>创建新帖子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署到远程站点（github）"><a href="#部署到远程站点（github）" class="headerlink" title="部署到远程站点（github）"></a>部署到远程站点（github）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><hr><h2 id="报错-amp-解决方法"><a href="#报错-amp-解决方法" class="headerlink" title="报错 &amp; 解决方法"></a>报错 &amp; 解决方法</h2><h3 id="404-这里没有GitHub-Pages网站。"><a href="#404-这里没有GitHub-Pages网站。" class="headerlink" title="404 这里没有GitHub Pages网站。"></a>404 这里没有GitHub Pages网站。</h3><p>Git Bash 中 执行 hexo s 本地运行可以看到博客页面，在执行 hexo d 部署到 github 上后，通过 <a href="https://wujueblog.github.io/">https://wujueBlog.github.io</a> 访问页面出现 404 警告。<br>github 项目中存在部署的文件， 排除 hexo init 初始化博客文件部署失败的可能性。</p><p><img src="/img/github404.png" alt="github404" title="404"></p><blockquote><p>将 github 项目名改为 [github名称].github.io</p></blockquote><p><em>说明: 在hexo中使用GitHub页面，默认将url设置为 ‘https:username.github.io’</em></p><h3 id="Hexo启动页面显示extends-includes-x2F-layout-pug-block-content-include-includes-x2F-recent-posts-pug-include"><a href="#Hexo启动页面显示extends-includes-x2F-layout-pug-block-content-include-includes-x2F-recent-posts-pug-include" class="headerlink" title="Hexo启动页面显示extends includes&#x2F;layout.pug block content include includes&#x2F;recent-posts.pug include"></a>Hexo启动页面显示extends includes&#x2F;layout.pug block content include includes&#x2F;recent-posts.pug include</h3><p>Hexo 更换 Butterfly 主题后启动服务器，界面显如下字符:</p><p><strong>extends includes&#x2F;layout.pug block content include includes&#x2F;recent-posts.pug include includes&#x2F;partial</strong></p><blockquote><p>在 Gie Bash 界面执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>清除缓存 &amp; 生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo c &amp; hexo g</span><br></pre></td></tr></table></figure></blockquote><p><em>说明: 没有 pug 以及 stylus 的渲染器</em></p><h3 id="网页无法显示图片"><a href="#网页无法显示图片" class="headerlink" title="网页无法显示图片"></a>网页无法显示图片</h3><p>在项目文件中加入图片，不论以相对路径还是绝对路径在 Markdowm 中引用图片，在网页无法显示。</p><blockquote><p>将图片放到 themes&#x2F;butterfly&#x2F;source&#x2F;img 路径下，在 Markdowm 里使用 img&#x2F;xxx.png 引用图片</p></blockquote><p><em>说明: hexo g 生成静态文件只会同步生成 themes&#x2F;butterfly&#x2F;source&#x2F;img 路径下的图片，使用要使用这个路径；而 Markdowm 引用路径在静态文件对应的 index.html 中会默认在引用前加’&#x2F;‘，由于两个文件路径引用不统一不兼容，因而这种方法虽然不需要插件，但是不便于管理，本地无法查看图片，绝。</em></p><h3 id="hexo-d-部署报错"><a href="#hexo-d-部署报错" class="headerlink" title="hexo d 部署报错"></a>hexo d 部署报错</h3><p>在 Bash 中使用 hexo s 部署在本地服务器时网页咩问题，使用 hexo d 命令部署到github时，报错如下：</p><p><span style="background: red; color: white">FATAL</span> Something’s wrong. Maybe you can find the solution here:<u>https：&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.html<br></u>Error: Spawn failed<br><span style="color: white">——–</span>at ChildProcess.<anonymous> (D:\Toolbox\apps\PhpStorm\workspace\WuJueBlog\node_modules\hexo-util\lib\spawn.js:51:21)<br><span style="color: white">——–</span>at ChildProcess.emit (node:events:513:28)<br><span style="color: white">——–</span>at cp.emit (D:\Toolbox\apps\PhpStorm\workspace\WuJueBlog\node_modules\cross-spawn\lib\enoent.js:34:29)<br><span style="color: white">——–</span>at ChildProcess._handle.onexit (node:internal&#x2F;child_process:291:12)</p><p><img src="/img/ErrSpawn_failed.png" alt="ErrSpawn_failed" title="Err"></p><blockquote><p>修改 _config.yml 文件中的仓库地址，如果是HTTPS地址则改为SSH地址，反之亦然</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/WuJiaoJue/wujueblog.github.io.git</span></span><br><span class="line"><span class="comment"># git@github.com:WuJiaoJue/WuJiaoJue.github.io.git</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/WuJiaoJue/WuJiaoJue.github.io.git</span>  <span class="comment">#你的仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="npm-install-…-无响应或报错ERR"><a href="#npm-install-…-无响应或报错ERR" class="headerlink" title="npm install … 无响应或报错ERR"></a>npm install … 无响应或报错ERR</h3><blockquote><p>开代理，挂“全局模式”，然后执行 npm install</p></blockquote><p><em>说明：很经典了，国内访问国外的库网缺少存在可能被墙的问题，本来应该是换源解决的吧，懒得换源了，反正全局模式的延迟就很低</em></p>]]></content>
      
      
      <categories>
          
          <category> 学习日志 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World | 你好 世界</title>
      <link href="/2022/11/10/hello-world/"/>
      <url>/2022/11/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
